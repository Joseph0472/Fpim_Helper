[{"D:\\CodeStuff\\fpim_helper\\frontend\\src\\index.js":"1","D:\\CodeStuff\\fpim_helper\\frontend\\src\\App.js":"2","D:\\CodeStuff\\fpim_helper\\frontend\\src\\components\\Input.js":"3"},{"size":221,"mtime":1628830669869,"results":"4","hashOfConfig":"5"},{"size":180,"mtime":1628985615193,"results":"6","hashOfConfig":"5"},{"size":5274,"mtime":1629447162025,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"dqcdgo",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CodeStuff\\fpim_helper\\frontend\\src\\index.js",[],["16","17"],"D:\\CodeStuff\\fpim_helper\\frontend\\src\\App.js",["18"],"import React, {useState} from 'react';\nimport Input from './components/Input.js';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Input />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\CodeStuff\\fpim_helper\\frontend\\src\\components\\Input.js",["19","20"],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":1,"column":16,"nodeType":"27","messageId":"28","endLine":1,"endColumn":24},{"ruleId":"29","severity":1,"message":"30","line":66,"column":15,"nodeType":"31","endLine":71,"endColumn":6},{"ruleId":"29","severity":1,"message":"32","line":71,"column":7,"nodeType":"33","endLine":71,"endColumn":17,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'searchByKeyWords'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [itemInfo, searchByKeyWords]",{"range":"40","text":"41"},[2012,2022],"[itemInfo, searchByKeyWords]"]